name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

env:
  TURBO_REMOTE_ONLY: true
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CF_TURNSTILE_SECRET_KEY: ${{ secrets.CF_TURNSTILE_SECRET_KEY }}
      DB_URL: ${{ secrets.DB_URL }}
      KV_URL: ${{ secrets.KV_URL }}
      NEXT_PUBLIC_CF_TURNSTILE_SITE_KEY: ${{ secrets.NEXT_PUBLIC_CF_TURNSTILE_SITE_KEY }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Get pnpm package store path
        id: get-store-path
        run: echo STORE_PATH=$(pnpm store path) >> $GITHUB_OUTPUT

      - name: Cache Next.js builds
        uses: actions/cache@v4
        id: cache-pnpm-store
        with:
          path: |
            ${{ steps.get-store-path.outputs.STORE_PATH }}
            ${{ github.workspace }}/apps/*/.next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm lint

      - name: Check code formatting
        run: pnpm format:check

      - name: Build
        run: pnpm build
